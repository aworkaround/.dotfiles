---
- name: Machine setup
  hosts: localhost
  connection: local
  become: true
  become_user: root
  gather_facts: true

  vars:
    home_dir: "/home/{{ remote_regular_user }}"

  tasks:
  - name: Get my user
    ansible.builtin.set_fact:
      remote_regular_user: "{{ ansible_env.SUDO_USER or ansible_user_id }}"

  - name: Install packages (Can take some time)
    ansible.builtin.apt:
      name:
      - git
      - htop
      - vim
      - gh
      - gcc
      - zsh
      - stow
      - fzf
      - tmux
      - build-essential
      - make
      - patch
      - curl
      - wget
      - neovim
      - python3
      - python3-pip
      - python3-poetry
      - tar
      - software-properties-common
      - apt-transport-https
      - lsb-release
      - ca-certificates
      - gnupg
      - libssl-dev
      - libffi-dev
      state: latest
      update_cache: yes

  - name: Change shell to zsh
    ansible.builtin.user:
      name: "{{ remote_regular_user }}"
      shell: /usr/bin/zsh

  - name: Add Microsoft signing key
    ansible.builtin.get_url:
      url: https://packages.microsoft.com/keys/microsoft.asc
      dest: /etc/apt/keyrings/microsoft.gpg
      mode: '0044'

  - name: Checking if Powershell is installed
    ansible.builtin.command: pwsh --version
    register: powershell_installed
    changed_when: false
    ignore_errors: true
    no_log: true

  - name: Checking if Azure CLI is installed
    ansible.builtin.command: az --version
    register: azure_cli_installed
    changed_when: false
    ignore_errors: true
    no_log: true

  - name: Install PowerShell
    when: powershell_installed is failed
    ansible.builtin.apt:
      deb: https://github.com/PowerShell/PowerShell/releases/download/v7.4.6/powershell_7.4.6-1.deb_amd64.deb
      state: present

  - name: Install Azure CLI
    when: azure_cli_installed is failed
    ansible.builtin.shell:
      cmd: curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash

  - name: Add Hashicorp GPG keys
    ansible.builtin.get_url:
      url: https://apt.releases.hashicorp.com/gpg
      dest: /usr/share/keyrings/hashicorp-archive-keyring.gpg
      mode: '0044'

  - name: Add Hashicorp Repository
    ansible.builtin.apt_repository:
      repo: "deb [trusted=yes arch=amd64 signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] https://apt.releases.hashicorp.com {{ ansible_distribution_release }} main"
      filename: /etc/apt/sources.list.d/hashicorp.list
      state: present
      update_cache: true

  - name: Install Terraform
    ansible.builtin.apt:
      name: terraform
      state: latest

  - name: Check is Dotfiles directory Exists
    ignore_errors: true
    register: dotfiles_exists
    ansible.builtin.shell:
      cmd: "ls {{ home_dir }}/dotfiles"

  - name: Download Dotfiles
    when: dotfiles_exists.rc != 0
    become_user: "{{ remote_regular_user }}"
    ansible.builtin.git:
      repo: https://github.com/aworkaround/dotfiles.git
      single_branch: true
      depth: 1
      dest: "{{ home_dir }}/dotfiles"

  - name: Create links to dotfiles
    become_user: "{{ remote_regular_user }}"
    ansible.builtin.shell:
      cmd: cd {{ home_dir }}/dotfiles && stow . --dotfiles --adopt

  - name: Backup Existing LazyVIM config if any
    become_user: "{{ remote_regular_user }}"
    failed_when: true
    ignore_errors: true
    no_log: true
    ansible.builtin.shell:
      cmd: |
        mv "{{ home_dir }}/.config/nvim" "{{ home_dir }}/.config/nvim.bak" -f

  - name: Install LazyVIM
    become_user: "{{ remote_regular_user }}"
    ansible.builtin.git:
      repo: https://github.com/LazyVim/starter.git
      single_branch: true
      depth: 1
      dest: "{{ home_dir }}/.config/nvim"

  - name: Install Azure PowerShell Module (Can take some time)
    ansible.builtin.shell:
      cmd: pwsh -c "Install-Module -Name Az -Scope AllUsers -AllowClobber"

  - name: Create SSH Dir
    become_user: "{{ remote_regular_user }}"
    ansible.builtin.shell:
      cmd: |
        mkdir {{ home_dir }}/.ssh -p
        chmod 700 {{ home_dir }}/.ssh

  - name: Create SSH KeyPair
    become_user: "{{ remote_regular_user }}"
    community.crypto.openssh_keypair:
      path: "{{ home_dir }}/.ssh/id_rsa"

  - name: Sudo without password
    ansible.builtin.shell:
      cmd: |
        cp /etc/sudoers /etc/sudoers.bak
        echo "{{ remote_regular_user }} ALL=NOPASSWD:ALL" >> /etc/sudoers
